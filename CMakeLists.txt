cmake_minimum_required(VERSION 3.18)

set(CMAKE_EXPORT_COMPILE_COMMANDS ON)

set(PROJECT_ROOT_DIR ${CMAKE_CURRENT_SOURCE_DIR})

project(yama)


set(PROJECT_CMAKE_UTIL_DIR "${CMAKE_CURRENT_LIST_DIR}/cmake")

# add cmake tool file
include(${PROJECT_CMAKE_UTIL_DIR}/yama.cmake)

# 3rd_party
include (${CMAKE_SOURCE_DIR}/3rd_party/3rd_party.prepare.cmake)


include (${PROJECT_CMAKE_UTIL_DIR}/find_configure_package.cmake)
include (${PROJECT_CMAKE_UTIL_DIR}/project_build_option.cmake)
include (${PROJECT_CMAKE_UTIL_DIR}/find_platform.cmake)

# installer directory
if (NOT PROJECT_INSTALL_BAS_DIR)
	set (PROJECT_INSTALL_BAS_DIR "${PROJECT_BINARY_DIR}/${PROJECT_BUILD_NAME}")
endif ()
if(NOT EXISTS ${PROJECT_INSTALL_BAS_DIR})
	file(MAKE_DIRECTORY ${PROJECT_INSTALL_BAS_DIR})
	message(STATUS "create ${PROJECT_INSTALL_BAS_DIR} for build target.")
endif()

# compiler option
include (${PROJECT_CMAKE_UTIL_DIR}/compiler_option.cmake)
include (${PROJECT_CMAKE_UTIL_DIR}/project_tools.cmake)


set (CMAKE_ARCHIVE_OUTPUT_DIRECTORY "${PROJECT_INSTALL_BAS_DIR}/${CMAKE_INSTALL_LIBDIR}/${PROJECT_VCS_COMMIT_SHORT_SHA}")
set (CMAKE_LIBRARY_OUTPUT_DIRECTORY "${PROJECT_INSTALL_BAS_DIR}/${CMAKE_INSTALL_LIBDIR}/${PROJECT_VCS_COMMIT_SHORT_SHA}")
set (CMAKE_RUNTIME_OUTPUT_DIRECTORY "${PROJECT_INSTALL_BAS_DIR}/${CMAKE_INSTALL_BINDIR}")

set (PROJECT_INSTALL_RES_DIR "${PROJECT_INSTALL_BAS_DIR}/resource")
set (PROJECT_INSTALL_TOOLS_DIR  "${PROJECT_INSTALL_BAS_DIR}/tools")
set (PROJECT_INSTALL_SHARED_DIR "${CMAKE_LIBRARY_OUTPUT_DIRECTORY}")
set (PROJECT_INSTALL_RES_PBD_DIR "${PROJECT_INSTALL_RES_DIR}/pbdesc")
file(MAKE_DIRECTORY "${PROJECT_INSTALL_TOOLS_DIR}/bin")

file(MAKE_DIRECTORY ${PROJECT_INSTALL_SHARED_DIR})
file(MAKE_DIRECTORY ${PROJECT_INSTALL_RES_PBD_DIR})


include (${CMAKE_SOURCE_DIR}/3rd_party/3rd_party.macro.cmake)


add_subdirectory(yterm)
add_subdirectory(tests)

